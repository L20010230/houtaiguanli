{"remainingRequest":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/babel-loader/lib/index.js!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/src/views/login/login.vue?vue&type=template&id=a49090ce","dependencies":[{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/src/views/login/login.vue","mtime":1669541729000},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/cache-loader/dist/cjs.js","mtime":1669614083651},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/babel-loader/lib/index.js","mtime":1669614084006},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1669614084213},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/cache-loader/dist/cjs.js","mtime":1669614083651},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1669614084013}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/src/views/login/login.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;AAGN,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;AACH,EAAA,KAAK,EAAC;;;AA4BL,EAAA,KAAK,EAAC;;;;;;;;;;;;;uBAjCjB,YAAA,CAsDO,KAtDP,EAAA,UAAA,EAsDO,CAnDP,YAAA,CAkDM,KAlDN,EAAA,UAAA,EAkDM,CAjDJ,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,YAAA,CAAoD,IAApD,EAAA,UAAA,EAAoD,gBAAA,CAA1B,KAAA,CAAA,MAAA,IAAM,CAAN,GAAM,IAAN,GAAM,IAAoB,CAApD,EAAgC;AAAA;AAAhC,GAEE,EADF,YAAA,CAAmE,KAAnE,EAAmE;AAA9D,IAAA,KAAK,EAAC,QAAwD;AAA9C,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,IAAA,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAyC,GAAnE,E,iBAAwC,KAAA,CAAA,MAAA,IAAM,CAAN,GAAM,IAAN,GAAM,I,CAA9C,EAA8C;AAAA;AAA9C,GACE,CAHN,CAiDI,EA7CJ,YAAA,CA4CU,kBA5CV,EA4CU;AA3CP,IAAA,KAAK,EAAE,KAAA,CAAA,QA2CA;AA1CP,IAAA,KAAK,EAAE,KAAA,CAAA,KA0CA;AAzCR,IAAA,GAAG,EAAC,UAyCI;AAxCR,IAAA,KAAK,EAAC,eAwCE;AAvCP,IAAA,SAAO,EAAE,QAAA,CAAA;AAuCF,GA5CV,E;sBAOE;AAAA,aAEe,CAFf,YAAA,CAEe,uBAFf,EAEe;AAFD,QAAA,KAAK,EAAC,KAEL;AAFW,QAAA,IAAI,EAAC;AAEhB,OAFf,E;0BACE;AAAA,iBAAiD,CAAjD,YAAA,CAAiD,mBAAjD,EAAiD;wBAA9B,KAAA,CAAA,QAAA,CAAS,QAAqB;;qBAA9B,KAAA,CAAA,QAAA,CAAS,QAAT,GAAiB,M;;AAAa,WAAjD,E,IAAA,E;;AAAA,Y,cAAA,CAAiD,CAAjD;AAAA,S;;;;OADF,CAEe,EACf,YAAA,CAMe,uBANf,EAMe;AAND,QAAA,KAAK,EAAC,IAML;AANU,QAAA,IAAI,EAAC;AAMf,OANf,E;0BACE;AAAA,iBAIY,CAJZ,YAAA,CAIY,mBAJZ,EAIY;AAHV,YAAA,IAAI,EAAC,UAGK;wBAFD,KAAA,CAAA,QAAA,CAAS,QAER;;qBAFD,KAAA,CAAA,QAAA,CAAS,QAAT,GAAiB,M;cAEhB;AADV,YAAA,YAAY,EAAC;AACH,WAJZ,E,IAAA,E;;AAAA,Y,cAAA,CAIY,CAJZ;AAAA,S;;;;OADF,CADe,EAQO,KAAA,CAAA,MAAA,IAAM,C,kBAA1B,YAAA,CAMa,uBANb,EAMa;cAAA;AANmB,QAAA,KAAK,EAAC,MAMzB;AANgC,QAAA,IAAI,EAAC;AAMrC,OANb,E;0BACA;AAAA,iBAIY,CAJZ,YAAA,CAIY,mBAJZ,EAIY;AAHV,YAAA,IAAI,EAAC,UAGK;wBAFD,KAAA,CAAA,QAAA,CAAS,IAER;;qBAFD,KAAA,CAAA,QAAA,CAAS,IAAT,GAAa,M;cAEZ;AADV,YAAA,YAAY,EAAC;AACH,WAJZ,E,IAAA,E;;AAAA,Y,cAAA,CAIY,CAJZ;AAAA,S;;;;OADA,C,qCARa,EAef,YAAA,CAUe,uBAVf,EAUe;AAVA,QAAA,KAAK,EAAC,KAUN;AAVY,QAAA,IAAI,EAAC;AAUjB,OAVf,E;0BACE;AAAA,iBAQM,CARN,YAAA,CAQM,KARN,EAAA,UAAA,EAQM,CAPJ,YAAA,CAGY,mBAHZ,EAGY;AAFV,YAAA,KAAK,EAAC,SAEI;wBADD,KAAA,CAAA,QAAA,CAAS,gBACR;;qBADD,KAAA,CAAA,QAAA,CAAS,gBAAT,GAAyB,M;;AACxB,WAHZ,E,IAAA,E;;AAAA,Y,cAAA,CAOI,EAHJ,YAAA,CAEM,KAFN,EAEM;AAFA,YAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,qBAAE,QAAA,CAAA,WAAA,IAAA,QAAA,CAAA,WAAA,OAAA,QAAA,YAAF;AAAA,aAAA,CAEL;AAFoB,YAAA,KAAwB,EAAxB;AAAA,wBAAA;AAAA;AAEpB,WAFN,E,CACI,YAAA,CAAmD,mBAAnD,EAAmD;AAAxC,YAAA,YAAY,EAAE,KAAA,CAAA;AAA0B,WAAnD,EAAqC,IAArC,EAAqC;AAAA;AAArC,YAAqC,CAAA,cAAA,CAArC,C,CADJ,CAGI,CARN,CAQM,CARN;AAAA,S;;;;OADF,CAfe,EA0Bf,YAAA,CAQe,uBARf,EAQe,IARf,EAQe;0BAPb;AAAA,iBAEY,CAFK,KAAA,CAAA,MAAA,IAAM,C,kBAAvB,YAAA,CAEY,oBAFZ,EAEY;kBAAA;AAFiB,YAAA,KAAK,EAAC,WAEvB;AAFmC,YAAA,IAAI,EAAC,SAExC;AAFmD,YAAA,QAAQ,EAAE,KAAA,CAAA,SAE7D;AAFyE,YAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,qBAAE,QAAA,CAAA,UAAA,CAAU,UAAV,CAAF;AAAA,aAAA;AAE9E,WAFZ,E;8BACE;AAAA,qBAA0B,C,kCAAxB,KAAA,CAAA,SAAA,GAAS,OAAT,GAAS,I,GAAA;AAAA;eAAe,CAA1B;AAAA,a;;;;WADF,E;;AAAA,Y,YAAA,C,qCAEY,EACM,KAAA,CAAA,MAAA,IAAM,C,kBAAvB,YAAA,CAEW,oBAFX,EAEW;kBAAA;AAFkB,YAAA,KAAK,EAAC,WAExB;AAFoC,YAAA,IAAI,EAAC,SAEzC;AAFoD,YAAA,QAAQ,EAAE,KAAA,CAAA,SAE9D;AAF0E,YAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,qBAAE,QAAA,CAAA,YAAA,CAAY,UAAZ,CAAF;AAAA,aAAA;AAE/E,WAFX,E;8BACC;AAAA,qBAA0B,C,kCAAxB,KAAA,CAAA,SAAA,GAAS,OAAT,GAAS,I,GAAA;AAAA;eAAe,CAA1B;AAAA,a;;;;WADD,E;;AAAA,Y,YAAA,C,qCADW,CAFZ;AAAA,S,CAOa;;;;AAAA,OARf,CA1Be,CAFf;AAAA,K;;;;GAPF,E;;AAAA,I,+BAAA,CA6CI,CAlDN,CAmDO,CAtDP,C","sourcesContent":["<template>\n  <div class=\"login-contaner\">\n\n \n  <div class=\"login-box\">\n    <div class=\"top-boxs\">\n        <h2 class=\"login-title\">{{lgzcSt==0?\"登录\":\"注册\"}}</h2>\n        <div class=\"zc-btn\" @click=\"lgzcBtn\" >{{lgzcSt==1?\"登录\":\"注册\"}}</div>\n    </div>\n    <el-form\n      :model=\"ruleForm\"\n      :rules=\"rules\"\n      ref=\"ruleForm\"\n      class=\"demo-ruleForm\"\n      @keydown=\"loginKeydown\"\n    >\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"ruleForm.username\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input\n          type=\"password\"\n          v-model=\"ruleForm.password\"\n          autocomplete=\"off\"\n        ></el-input>\n      </el-form-item>\n        <el-form-item v-if=\"lgzcSt==1\"  label=\"确认密码\" prop=\"pass\">\n        <el-input\n          type=\"password\"\n          v-model=\"ruleForm.pass\"\n          autocomplete=\"off\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item  label=\"验证码\" prop=\"verificationCode\">\n        <div class=\"flex\">\n          <el-input\n            class=\"veri-mr\"\n            v-model=\"ruleForm.verificationCode\"\n          ></el-input>\n          <div @click=\"refreshCode\" style=\"cursor: pointer;\">\n              <Identify :identifyCode=\"identifyCode\" ></Identify>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item >\n        <el-button v-if=\"lgzcSt==0\"  class=\"login-btn\" type=\"primary\" :disabled='showlogin' @click=\"submitForm('ruleForm')\">\n          {{showlogin?'登录中……':'登录'}}\n        </el-button>\n         <el-button v-if=\"lgzcSt==1\"  class=\"login-btn\" type=\"primary\" :disabled='showlogin' @click=\"submitZcForm('ruleForm')\">\n          {{showlogin?'注册中……':'注册'}}\n        </el-button>\n         \n      </el-form-item>\n    </el-form>\n  </div>\n   </div>\n</template>\n\n<script>\nimport { postLogin,getGetInfo,postRegister } from \"@/api/user\";\nimport Identify from './Identify.vue'\nimport md5 from 'js-md5';\nexport default {\n  components: {\n    Identify\n  },\n  data() {\n     var verificationCode = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入验证码\"));\n      } else if (value.length) {\n        if (this.ruleForm.verificationCode.toLowerCase() !== this.identifyCode.toLowerCase()) {\n           callback(new Error(\"请输入正确的验证码\"));\n        }\n        callback();\n      }\n    };\n     var validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else if (value.length < 6) {\n        callback(new Error(\"您输入密码长度小于6位\"));\n      } else {\n\n        if (this.lgzcSt==1&&this.ruleForm.pass !== \"\") {\n          this.$refs.ruleForm.validateField(\"checkPass\");\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      lgzcSt:0,\n      // 验证码规则\n      identifyCodes: '123456789ABCDEFGHGKMNPQRSTUVWXYZabcdefghgkmnpqrstuvwxyz',\n      identifyCode:'',\n      ruleForm: {\n        username: \"\",\n        password: \"\",\n        verificationCode:\"\",\n        pass:\"\"\n      },\n      rules: {\n        username: [\n          { required: true, message: \"请输入用户名称\", trigger: \"blur\" },\n        ],\n        password: [{ required: true, validator: validatePass, trigger: \"blur\" }],\n        pass: [\n          { required: true, validator: validatePass2, trigger: \"blur\" },\n        ],\n        verificationCode: [\n          { required: true, message: \"请输入验证码\", trigger: \"blur\" },\n          { required: true, validator: verificationCode, trigger: \"blur\" }\n        ],\n      },\n      loading:{},\n      showlogin:false\n    };\n  },\n  created(){\n    sessionStorage.clear()\n  },\n  mounted() {\n    this.refreshCode()\n  },\n  methods: {\n    lgzcBtn(){\n     if( this.lgzcSt==0){\n       this.lgzcSt =1\n     }else{\n       this.lgzcSt = 0\n     }\n     this.refreshCode()\n    },\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = ''\n      this.makeCode(this.identifyCodes, 4)\n      // console.log(this.identifyCode)\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i<l; i++) {\n        this.identifyCode += this.identifyCodes[\n            Math.floor(Math.random() * (this.identifyCodes.length - 0) + 0)\n        ]\n      }\n    },\n    async postRegisters(doc) {\n      let data = await postRegister(doc);\n      if (data.code == 2000) {\n        this.$message.success({\n          message: \"注册成功\",\n          type: \"success\",\n        });\n        this.lgzcSt=0;\n        this.showlogin = false\n      } else {\n        this.showlogin = false\n        this.refreshCode()\n        this.$message.error(data.message);\n      }\n    },\n    // 注册\n    submitZcForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          let {username,password} = this.ruleForm\n          let psw2 = parseInt(password,16).toString()\n          password = md5(psw2)\n          this.postRegisters({\n              username,\n              password,\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 获取用户信息\n    async getGetInfos(doc){\n        let data = await getGetInfo(doc)\n        if(data.code===20000){\n           this.$store.dispatch('user/CloseTabList',[])\n            this.$store.dispatch('user/LoginSt',2)\n            this.$store.dispatch('user/UserList',data.data)\n            let userList =JSON.parse(sessionStorage.getItem('userList'))\n            sessionStorage.setItem('LoginSt',2)\n            sessionStorage.setItem('userList',JSON.stringify({...data.data,...userList}))\n            this.$router.replace('/main')\n            this.loading.close();\n            this.showlogin = false \n        }else{\n          this.loading.close();\n          this.$message.error(data.message);\n           this.showlogin = false \n        }\n         if(this.showlogin){\n          setTimeout(() => {\n            this.loading.close();\n            this.showlogin = false \n          }, 5000);\n        }\n    },\n    // 登录\n    async postLogins(doc){\n        this.loading = this.$loading({\n          lock: true,\n          text: '正在加载中',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        this.showlogin = true \n        let data = await postLogin(doc)\n        if(!data){\n          this.loading.close();\n          this.refreshCode()\n          this.showlogin = false \n          this.$message.error('服务器异常请联系管理员');\n          return\n        }\n        if(data.code===20000){\n          this.$store.dispatch('user/Roterlist',[]);\n          this.$store.dispatch('user/RouterPath','/main/home');\n          \n          this.getGetInfos()\n          sessionStorage.setItem('userList',JSON.stringify(data.data))\n        } else{\n          this.loading.close();\n           this.refreshCode()\n          this.$message.error(data.message);\n          this.showlogin = false \n        }\n        if(this.showlogin){\n          setTimeout(() => {\n             this.refreshCode()\n            this.loading.close();\n            this.showlogin = false \n          }, 5000);\n        }\n    },\n    loginKeydown(e){\n      if(e.keyCode===13){\n        this.submitForm('ruleForm')\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          let {username,password} = this.ruleForm\n          let psw2 = parseInt(password,16).toString()\n          password = md5(psw2)\n          this.postLogins({\n            username,\n            password\n          })\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n  },\n};\n</script>\n<style lang=\"less\" >\n.login-box .el-form-item__label{\n  color: #fff;\n   width: 80px;\n}\n.login-contaner{\n  width: 100vw;\n  height: 100vh;\n  // background: #afdfe4;\n  // background-image: linear-gradient(to bottom right, #33a3dc, rgb(245, 148, 148) 20%,#2585a6,#9ff368,#90d7ec);\n  background: url('../../assets/imgs/login-bj.png');\n  position: relative;\n\n  .login-title{\n    font-size: 25px;\n    margin-bottom: 30px;\n    color: #fff;\n  }\n  .top-boxs{\n    display: flex;\n    justify-content: space-between;\n  }\n  .login-box{\n    width: 430px;\n    // height: 400px;\n    border-radius: 10px;\n     background: url('../../assets/imgs/login-dl.png');\n    position: absolute;\n    top:50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    text-align: center;\n    padding: 30px;\n    padding-bottom: 10px;\n    box-sizing: border-box;\n  }\n  .login-btn{\n    margin-top:30px;\n    width: 200px;\n    font-size: 16px;\n  }\n  .flex{\n    display: flex;\n  }\n  .veri-mr{\n    margin-right: 10%;\n  }\n  .zc-btn{\n    color: #fff;\n    cursor: pointer;\n  }\n  .zc-btn:hover{\n    color: #409eff;\n  }\n}\n</style>"],"sourceRoot":""}]}