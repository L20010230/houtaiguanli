{"remainingRequest":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/babel-loader/lib/index.js!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/src/components/form-init/index.vue?vue&type=template&id=049a07dc","dependencies":[{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/src/components/form-init/index.vue","mtime":1669541729000},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/cache-loader/dist/cjs.js","mtime":1669614083651},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/babel-loader/lib/index.js","mtime":1669614084006},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1669614084213},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/cache-loader/dist/cjs.js","mtime":1669614083651},{"path":"/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1669614084013}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/lijiayu/alijiayu/jiayuan/shangcheng-main/src/components/form-init/index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <template v-if=\"formData.length\">\n    <el-form\n      :model=\"ruleForm\"\n      status-icon\n      :rules=\"rules\"\n      ref=\"refFormInit\"\n      label-width=\"120px\"\n      class=\"form-box\"\n    >\n      <template v-for=\"(item, index) in formData\" :key=\"index\"  class=\"el-form-item-boxs\">\n        <el-form-item\n          :label=\"item.label\"\n          :prop=\"item.formModel\"\n          v-if=\"item.editlist == 1\"\n          :style=\"itemClassFun(item)\"\n        >\n          <!-- 自定义插槽 -->\n          <template v-if=\"item.type == 'custom'\">\n            <slot :name=\"item.customName\" :item=\"item\" :ruleForm=\"ruleForm\"  ></slot>\n          </template>\n          <!-- input输入框 -->\n          <template v-if=\"item.type == 'text' || item.type == 'password'||item.type == 'textarea'\">\n            <el-input\n              :type=\"item.type\"\n              v-model=\"ruleForm[item.formModel]\"\n              :placeholder=\"item.placeholder\"\n              :disabled=\"item.disabled == 1\"\n              @input=\"typeChange({\n                type:item.type,\n                key: item.formModel,\n                label: item.label,\n                value: ruleForm[item.formModel],\n                items: item,\n              })\" \n            ></el-input>\n          </template>\n          <!-- 下拉框 -->\n          <template v-if=\"item.type == 'select'\">\n            <el-select\n              v-model=\"ruleForm[item.formModel]\"\n              :placeholder=\"item.placeholder\"\n              :multiple='item.multiple'\n              filterable\n              class=\"form-widths\"\n              @change=\"typeChange({\n                type:item.type,\n                key: item.formModel,\n                label: item.label,\n                value: ruleForm[item.formModel],\n                items: item,\n                option: selectOption[item.formModel]\n              })\" \n            >\n              <template v-for=\"(items,indexs) in selectOption[item.formModel]\" :key=\"indexs\">\n                  <el-option :label=\"items.dicValue\" :value=\"items.dicKey\"></el-option>\n              </template>\n            </el-select>\n          </template>\n          <!-- 开关 -->\n          <template v-if=\"item.type == 'switch'\">\n             <el-switch \n              v-model=\"ruleForm[item.formModel]\" \n              active-color=\"#13ce66\" \n              inactive-color=\"#ff4949\"\n               class=\"form-widths\"\n              @change=\"typeChange({\n                type:item.type,\n                key: item.formModel,\n                label: item.label,\n                value: ruleForm[item.formModel],\n                items: item,\n              })\" \n              ></el-switch>\n          </template>\n          <!-- 日期格式 -->\n          <template v-if=\"item.type == 'date'\">\n            <el-date-picker\n              class=\"form-widths\"\n              v-model=\"ruleForm[item.formModel]\" \n              :type=\"item.attributes['type']?item.attributes['type']:item.type\"\n              :placeholder=\"item.placeholder\"\n              :shortcuts=\"item.attributes['shortcuts']\"\n              :format=\"item.attributes['format']\"\n              :value-format=\"item.attributes['valueFormat']\"\n              :disabled-date=\"item.attributes['disabledDate']\"\n              :readonly=\"item.attributes['readonly']\"\n              :range-separator=\"item.attributes['rangeSeparator']\"\n              :default-time=\"item.attributes['defaultTime']\"\n              :start-placeholder=\"item.attributes['startPlaceholder']\"\n              :end-placeholder=\"item.attributes['endPlaceholder']\"\n              :default-value=\"item.attributes['defaultValue']\"\n              :unlink-panels=\"item.attributes['unlinkPanels']\"\n              :prefix-icon=\"item.attributes['prefixIcon']\"\n              :clear-icon=\"item.attributes['clearIcon']\"\n              @change=\"typeChange({\n                type:item.type,\n                key: item.formModel,\n                label: item.label,\n                value: ruleForm[item.formModel],\n                items: item,\n              })\" \n            >\n            </el-date-picker>\n          </template>\n          <!-- 多选框 -->\n          <template v-if=\"item.type == 'checkbox'\">\n              <el-checkbox-group v-model=\"ruleForm[item.formModel]\"  class=\"form-widths\">\n                <template v-for=\"(itemRadio,indexss) in selectOption[item.formModel]\" :key='indexss'>\n                  <el-checkbox :label=\"itemRadio.dicKey\" name=\"type\">{{itemRadio.dicValue}}</el-checkbox>\n                </template>\n              </el-checkbox-group>\n          </template>\n          <!-- 单选框 -->\n          <template v-if=\"item.type=='radio'\"  class=\"form-widths\">\n            <el-radio-group v-model=\"ruleForm[item.formModel]\">\n              <template v-for=\"(itemRadio,indexss) in selectOption[item.formModel]\" :key='indexss'>\n                  <el-radio :label=\"itemRadio.dicKey\" >{{itemRadio.dicValue}}</el-radio>\n              </template>\n            </el-radio-group>\n          </template>\n          <!-- 按钮 -->\n          <template v-if=\"item.type == 'button'\"  class=\"form-widths\">\n            <el-button\n              :type=\"item.btnType\"\n              @click=\"btns(item.btnFun)\"\n              :disabled=\"item.disabled == 1\"\n            >\n              {{ item.text }}\n            </el-button>\n          </template>\n        </el-form-item>\n      </template>\n    </el-form>\n  </template>\n</template>\n\n<script>\nimport {postUserFormConfiguration,postUserDictionaryPage} from '@/api/user'\nexport default {\n  props: [\"formPage\",'formInitDatas'],\n  data() {\n    return {\n      ruleForm: {},\n      formData: [],\n      rules: {},\n      selectOption:{},\n      selectCustomList:[],\n    };\n  },\n  created() {\n    // 获取表单数据\n    if(!this.formPage.formId){\n       this.formInit(this.formInitDatas);\n    }else{\n        // 这里是表单数据处理方法\n        this.postUserFormConfigurations()\n    }\n   \n  },\n\n  methods: {\n    // 计算是否一行显示几个\n    itemClassFun(data){\n      // console.log(data);\n      // 占有列数\n      // let list =  this.formData.filter(item=>item.occupiedColumns>1)\n      // console.log(list)\n     let  fromList = JSON.parse(JSON.stringify(this.formData))\n     let list =fromList.sort((obj1,obj2)=>{\n        return obj2.occupiedColumns - obj1.occupiedColumns\n      })\n     let foccupiedColumns =  list[0].occupiedColumns\n      let  width= 100;\n      if(foccupiedColumns){\n         width = 100/foccupiedColumns;\n      }\n\n      if(data.occupiedColumns>1){\n        width = width*data.occupiedColumns\n      }\n      return  {\n         width:`${width}%`,\n      };\n    },\n    async postUserFormConfigurations (){\n      let data = await postUserFormConfiguration({formId:this.formPage.formId})\n      if (data.code == 2000) {\n        if(data.data.length==0){\n           this.$message.error(data.message);\n        }\n        // 这里是表单数据处理方法\n        this.formInit(data.data);\n      \n      } else {\n        this.$message.error(data.message);\n      }\n    },\n    formInit(arr) {\n      let ruleFormObj = {};\n      let rulesObj = {};\n      arr.map((item) => {\n        // 是否需要字典\n        if(item.type == \"select\"||item.type == \"radio\"||item.type == \"checkbox\"){\n          this.selectOption[item.formModel]=[]\n          if(item.selectCustom==1){\n            this.selectCustomList.push({key:item.dictionaryKey,formModel:item.formModel})\n          }\n        }\n        // 是否有自定义属性\n        item['attributes'] = {};\n        if(this.formPage?.attributes){\n          item.attributes = this.formPage.attributes[item.formModel]?this.formPage.attributes[item.formModel]:{}\n        }\n        // 是否是按钮功能\n        if (item.editlist != 0 && item.type != \"button\") {\n          if(item.type == 'checkbox'){\n            ruleFormObj[item.formModel] = item.dicDefault?item.dicDefault.split(','):[];\n          }else{\n            ruleFormObj[item.formModel] = item.dicDefault?item.dicDefault:\"\";\n          }\n        }\n\n        // 是否进行校验\n        if (item.isCheck == 1) {\n          // 系统配置交易 并且 隐藏不进行校验\n          if (item.editlist != 0 && item.type != \"button\") {\n            let rulesItemArr = [];\n            let propValidator = this.formPage.validator;\n            item.rules.map((rulesItem) => {\n              let obj = {};\n              // 自定义校验\n              if (rulesItem.isValidator == 1) {\n                obj = {\n                  required: rulesItem.required == 1 ? true : false,\n                  validator: propValidator[rulesItem.validator],\n                  trigger: rulesItem.trigger,\n                };\n              } else {\n                obj = {\n                  required: rulesItem.required == 1 ? true : false,\n                  message: rulesItem.message,\n                  trigger: rulesItem.trigger,\n                };\n                if (rulesItemArr.length) {\n                  delete obj.required;\n                }\n                if (rulesItem.type) {\n                  obj.type = rulesItem.type;\n                }\n                if (rulesItem.min) {\n                  obj.min = rulesItem.min;\n                }\n                if (rulesItem.max) {\n                  obj.max = rulesItem.max;\n                }\n              }\n              rulesItemArr.push(obj);\n            });\n            rulesObj[item.formModel] = rulesItemArr;\n          }\n        }\n      });\n      this.ruleForm = ruleFormObj;\n      this.rules = rulesObj;\n      this.formData = arr;\n      // 获取字典\n      this.dictionary();\n    \n    },\n    // 获取字典表单获取字典值\n    async dictionary(){\n      let list =[]\n       this.selectCustomList.map(items=>{\n         let isItems = list.some(keys=>keys==items.key)\n         if(!isItems){\n           list.push(items.key)\n         }\n       })\n        let data = await postUserDictionaryPage({list:list})\n        if(data.code==2000){\n           this.selectCustomList.map(item=>{\n              this.selectOption[item.formModel] =data.data[item.key];\n            })\n        }else{\n           this.$message.error(data.message);\n        }\n    },\n    // 设置自定义下拉框值\n    setOption(key,option){\n       this.selectOption[key] = option;\n    },\n    // 设置值\n    setVaule(key,vaule){\n      this.ruleForm[key] = vaule\n    },\n    // 获取值\n    getVaule(key){\n       return this.ruleForm[key]\n    },\n    typeChange(event){\n      this.$emit('typeChange',event)\n    },\n    formValidate() {\n      let isValid = false;\n      this.$refs.refFormInit.validate((valid) => {\n        if (valid) {\n          isValid = valid;\n        } else {\n          isValid = false;\n          return false;\n        }\n      });\n      return isValid;\n    },\n    // 获取值\n    getData() {\n      return this.ruleForm;\n    },\n    // \n    validateField(item) {\n      this.$refs.refFormInit.validateField(item);\n    },\n    // 按钮时间\n    btns(data) {\n      this.$emit(\"formBtn\", data);\n    },\n  },\n};\n</script>\n<style lang=\"less\">\n  .form-box {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    width: 100%;\n    .form-widths{\n      width: 100%;\n    }\n  }\n  \n</style>\n"],"sourceRoot":""}]}